// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package msgflatbuf

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type Resolution struct {
	_tab flatbuffers.Struct
}

func (rcv *Resolution) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *Resolution) Table() flatbuffers.Table {
	return rcv._tab.Table
}

func (rcv *Resolution) Window() int64 {
	return rcv._tab.GetInt64(rcv._tab.Pos + flatbuffers.UOffsetT(0))
}
func (rcv *Resolution) MutateWindow(n int64) bool {
	return rcv._tab.MutateInt64(rcv._tab.Pos+flatbuffers.UOffsetT(0), n)
}

func (rcv *Resolution) Precision() int64 {
	return rcv._tab.GetInt64(rcv._tab.Pos + flatbuffers.UOffsetT(8))
}
func (rcv *Resolution) MutatePrecision(n int64) bool {
	return rcv._tab.MutateInt64(rcv._tab.Pos+flatbuffers.UOffsetT(8), n)
}

func CreateResolution(builder *flatbuffers.Builder, window int64, precision int64) flatbuffers.UOffsetT {
	builder.Prep(8, 16)
	builder.PrependInt64(precision)
	builder.PrependInt64(window)
	return builder.Offset()
}
